#compdef pandoc

_highlight_style() {
    _alternative \
        "arguments:STYLE:($(pandoc --list-highlight-styles))" \
        'files:FILE:_files'
}

_pandoc() {
    typeset -A opt_args
    local context state line
    local current_context="${curcontext}"

    _arguments -C \
        '(-h --help)'{-h,--help}'[show usage message]' \
        '(-v --version)'{-v,--version}'[print version]' \
        '(-f -r --from --read)'{-f,-r,--from=,--read=}'[specify input format]:FORMAT:((native\:"native Haskell" json\:"JSON version of native AST" markdown\:"pandoc extended Markdown" markdown_strict\:"original unextended Markdown" markdown_phpextra\:"PHP Markdown Extra" markdown_mmd\:"MultiMarkdown" gfm\:"Github-Flavored Markdown" commonmark\:"CommonMark Markdown" textile\:"Textile" rst\:"reStructuredText" html\:"HTML" docbook\:"DocBook" t2t\:"txt2tags" docx\:"docx" odt\:"ODT" epub\:"EPUB" opml\:"OPML" org\:"Emacs Org mode" mediawiki\:"MediaWiki markup" twiki\:"TWiki markup" tikiwiki\:"TikiWiki markup" creole\:"Creole 1.0" haddock\:"Haddock markup" latex\:"LaTeX"))' \
        '(-t -w --to --write)'{-t,-w,--to=,--write=}'[specify output format]:FORMAT:((native\:"native Haskell" json\:"JSON version of native AST" plain\:"plain text" markdown\:"pandoc extended Markdown" markdown_strict\:"original unextended Markdown" markdown_phpextra\:"PHP Markdown Extra" markdown_mmd\:"MultiMarkdown" gfm\:"GitHub-Flavored Markdown" commonmark\:"CommonMark Markdown" rst\:"reStructuredText" html4\:"XHTML 1.0 Transitional" html\:"HTML5/XHTML polyglot markup" html5\:"HTML5/XHTML polyglot markup" latex\:"LaTeX" beamer\:"LaTeX beamer slide show" context\:"ConTeXt" man\:"groff man" mediawiki\:"MediaWiki markup" dokuwiki\:"DokuWiki markup" zimwiki\:"ZimWiki markup" textile\:"Textile" org\:"Emacs Org mode" texinfo\:"GNU Texinfo" opml\:"OPML" docbook\:"DocBook 4" docbook4\:"DocBook 4" docbook5\:"DocBook 5" jats\:"JATS XML" opendocument\:"OpenDocument" odt\:"OpenOffice text document" docx\:"Word docx" haddock\:"Haddock markup" rtf\:"rich text format" epub2\:"EPUB v2 book" epub\:"EPUB v3" epub3\:"EPUB v3" fb2\:"FictionBook2 e-book" asciidoc\:"AsciiDoc" icml\:"InDesign ICML" tei\:"TEI Simple" slidy\:"Slidy HTML and JavaScript slide show" slideous\:"Slideous HTML and JavaScript slide show" dzslides\:"DZSlides HTML5 + JavaScript slide show" revealjs\:"reveal.js HTML5 + JavaScript slide show" s5\:"S5 HTML and JavaScript slide show"))' \
        '(-o --output)'{-o,--output}'[write output to FILE instead of stdout]:FILE:_files' \
        '--data-dir=[specify the user data directory to search for pandoc data files]:DIRECTORY:_path_files' \
        '--bash-completion[generate a bash completion script]' \
        '--verbose[give verbose debugging output]' \
        '--quiet[suppress warning messages]' \
        '--fail-if-warnings[exit with error status if there are any warnings]' \
        '--log=[write log messages in machine-readable JSON format to FILE]:FILE:_files' \
        '--list-input-formats[list supported input formats]' \
        '--list-output-formats[list supported output formats]' \
        '--list-extensions[list supported extensions]' \
        '--list-highlight-languages[list supported supported languages for syntax highlighting]' \
        '--list-highlight-styles[list supported styles for syntax highlighting]' \
        '--base-header-level=[specify the base level for headers]:NUMBER:()' \
        '--indented-code-classes=[specify classes to use for indented code blocks]:CLASSES:()' \
        '--default-image-extension=[specify a default extension to use when image paths/URLs have no extension]:EXTENSION:()' \
        '--file-scope[parse each file individually before combining for multifile documents]' \
        '--filter=[specify an executable to be used as a filter transforming the pandoc AST]:PROGRAM:_command_names' \
        '--lua-filter=[transform the document in a similar fashion as json filters]:SCRIPT:()' \
        '(-M --metadata)'{-M,--metadata=}'[set the metadata field KEY to the value VAL]:KEY:()' \
        '(-p --preserve-tabs)'{-p,--preserve-tabs}'[preserve tabs instead of converting them to spaces]' \
        '--tab-stop=[specify the number of spaces per tab]:NUMBER:()' \
        '--track-changes=[specifies what to do with insertions, deletons and comments]:ACTION:(accept reject all)' \
        '--extract-media=[extract images and other medias contained in or linked from the source document]:DIRECTORY:_file_paths' \
        '--abbreviations=[specifies a custom abbreviations file, with abbreviations one to a line]:FILE:_files' \
        '(-s --standalone)'{-s,--standalone}'[produce output with an appropriate header and footer]' \
        '--template=[use FILE as a custom template for the generated document]:FILE:_files' \
        '(-V --variable)'{-V,--variable=}'[set the template variable KEY to the value VAL]:KEY:()' \
        '(-D --print-default-template)'{-D,--print-default-template=}'[print the system default template for an output FORMAT]:FORMAT:((native\:"native Haskell" json\:"JSON version of native AST" plain\:"plain text" markdown\:"pandoc extended Markdown" markdown_strict\:"original unextended Markdown" markdown_phpextra\:"PHP Markdown Extra" markdown_mmd\:"MultiMarkdown" gfm\:"GitHub-Flavored Markdown" commonmark\:"CommonMark Markdown" rst\:"reStructuredText" html4\:"XHTML 1.0 Transitional" html\:"HTML5/XHTML polyglot markup" html5\:"HTML5/XHTML polyglot markup" latex\:"LaTeX" beamer\:"LaTeX beamer slide show" context\:"ConTeXt" man\:"groff man" mediawiki\:"MediaWiki markup" dokuwiki\:"DokuWiki markup" zimwiki\:"ZimWiki markup" textile\:"Textile" org\:"Emacs Org mode" texinfo\:"GNU Texinfo" opml\:"OPML" docbook\:"DocBook 4" docbook4\:"DocBook 4" docbook5\:"DocBook 5" jats\:"JATS XML" opendocument\:"OpenDocument" odt\:"OpenOffice text document" docx\:"Word docx" haddock\:"Haddock markup" rtf\:"rich text format" epub2\:"EPUB v2 book" epub\:"EPUB v3" epub3\:"EPUB v3" fb2\:"FictionBook2 e-book" asciidoc\:"AsciiDoc" icml\:"InDesign ICML" tei\:"TEI Simple" slidy\:"Slidy HTML and JavaScript slide show" slideous\:"Slideous HTML and JavaScript slide show" dzslides\:"DZSlides HTML5 + JavaScript slide show" revealjs\:"reveal.js HTML5 + JavaScript slide show" s5\:"S5 HTML and JavaScript slide show"))' \
        '--print-default-data-file=[print a system default data file]:FILE:_files' \
        '--eol=[manually specify line endings]:ENDING:((crlf\:"Windows" lf\:"OSX/Linux/UNIX" native\:"specific to the OS"))' \
        '--dpi=[specify the dpi value for conversion from pixels to inch/centimeters and vice versa]:NUMBER:()' \
        '--wrap=[determine how text is wrapped in the output (the source code)]:WRAP:(auto none preserve)' \
        '--columns=[specify length of lines in characters]:LENGTH:()' \
        '(--toc --table-of-contents)'{--toc,--table-of-contents}'[include an automatically generated table of contents]' \
        '--toc-depth=[specify the number of section levels to include in the table of contents]:DEPTH:()' \
        '--strip-comments[strip out HTML comments in the Markdown or Textile source]' \
        '--no-highlight[disable syntax highlighting for code blocks and inlines]' \
        '--highlight-styles=[specifies the coloring style to be used in highlighted source code]:OPTION:_highlight_style' \
        '--syntax-definition=[instructs pandoc to load KDE XML syntax definition file]:FILE:_files' \
        '(-H --include-in-header)'{-H,--include-in-header=}'[include contents of FILE, verbatim, at the end of the header]:FILE:_files' \
        '(-B --include-before-body)'{-B,--include-before-body=}'[include contents of FILE, verbatim, at the beginning of the document body]:FILE:_files' \
        '(-A --include-after-body)'{-A,--include-after-body=}'[include contents of FILE, verbatim, at the end of the document body]:FILE:_files' \
        '--resource-path=[list of paths to search for images and other resources]:SEARCHPATH:_file_paths' \
        '--request-header=[set the request header NAME to the value VALUE when making HTTP requests]:NAME:()' \
        '--self-contained[produce a standalone HTML file with no external dependencies]' \
        '--html-q-tags[use <q> tags for quotes in HTML]' \
        '--ascii[use only ASCII characters in output]' \
        '--reference-links[use reference-style links, rather than inline links, in writing Markdown or reStructuredText]' \
        '--reference-location=[specify whether footnotes are placed at the end of the current (top-level) block]:PLACE:(block section document)' \
        '--atx-headers[use ATX-style headers in Markdown and AsciiDoc output]' \
        '--top-level-division=[treat top-level headers as the given division type in LaTeX, ConTeXt, DocBook and TEI output]:DIVISION:(default section chapter part)' \
        '(-N --number-sections)'{-N,--number-sections}'[number section headings in LaTeX, ConTeXt, HTML or EPUB output]' \
        '--number-offset=[offset for section headings in HTML output]:NUMBER:()' \
        '--listings[use the listings package for LaTeX code blocks]' \
        '(-i --incremental)'{-i,--incremental}'[make list items in slide shows display incrementally (one by one)]' \
        '--slide-level=[specifies that headers with the specified level create slides (for beamer, s5, slidy, slideous, dzslides)]:NUMBER:()' \
        '--section-divs[wrap sections in <section> tags (or <div> tags for html4)]' \
        '--email-obfuscation=[specify a method for obfuscating mailto: links in HTML documents]:METHOD:(none javascript references)' \
        '--id-prefix=[specify a prefix to be added to all identifiers, internal links and footnote numbers]:STRING:()' \
        '(-T --title-prefix)'{-T,--title-prefix=}'[specify STRING as a prefix at the beginning of the title that appears in the HTML header]:STRING:()'
}

_pandoc "${@}"
